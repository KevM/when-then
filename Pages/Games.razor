@page "/games"
@inject HttpClient Http

@if (whens == null || thens == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="card text-center">
        <div class="card-header">
            What would you do if? / Then I would.
        </div>
        <div class="card-body">
            <h5 class="card-text">What would you do if <strong>@when</strong>?</h5>

            @if (showThen)
            {
                <h5 class="card-text">Then I would <strong>@then</strong>.</h5>
                <br/>
                <button class="btn btn-primary btn-block" @onclick="OnClick">Really?!</button>
            }
            else
            {
                <button class="btn btn-secondary btn-sm" @onclick="ShowThen">Show Me!</button>
            }
        </div>
        <div class="card-footer text-muted">
            @whenDex of @whens.Length
        </div>
    </div>
}

@code {
    private int whenDex = 0;
    private string[] whens;
    private string when;

    private int thenDex = 0;
    private string[] thens;
    private string then;
    private bool showThen = false;

    protected override async Task OnInitializedAsync()
    {
        var data = await Http.GetStringAsync("sample-data/when.csv");
        var lines = data.Split(Environment.NewLine);
        var w = lines.Skip(1).Select(x => x.Split(',')[1].Trim('"').TrimEnd('?'));
        whens = MSSystemExtenstions.Shuffle(w).ToArray();

        data = await Http.GetStringAsync("sample-data/then.csv");
        lines = data.Split(Environment.NewLine);
        var t = lines.Skip(1).Select(x => x.Split(',')[1].Trim('"'));
        thens = MSSystemExtenstions.Shuffle(t).ToArray();

        OnClick();
    }

    private void OnClick()
    {
        when = GetWhen();
        then = GetThen();
        showThen = false;
    }

    private void ShowThen()
    {
        showThen = true;
    }

    private string GetWhen()
    {
        if (whenDex == whens.Length) whenDex = 0;
        return whens[whenDex++];
    }

    private string GetThen()
    {
        if (thenDex == thens.Length) thenDex = 0;
        return thens[thenDex++];
        showThen = false;
    }
}
